angular.module('ui-tree-select', ['ui.select', 'ngSanitize'])
.directive('uiTreeSelect', [
    '$timeout',
    '$http',	
    function ( $timeout ,$http) {
      return {
        restrict: 'E',
        scope: { model: '=',
        		selectData: '='},
        link: function (scope, el,attrs) {
          scope.breadcrumbs = [{"id":0,"title":"All"}];
          var selectdataobj = null;
          if(!scope.selectData){
          	$http.get(attrs.selecturl).success( function(data){
        	  selectdataobj=data.data;
        	  scope.groups = selectdataobj[0];
          	})
          }else{
          	scope.groups=scope.selectData.data[0];
          }
                  	                                            
          scope.loadChildGroupsOf = function(group, $select) {
            $select.search = '';
            
            scope.breadcrumbs.push(group);
            scope.groups = selectdataobj[_.last(scope.breadcrumbs).id];
            scope.$broadcast('uiSelectFocus');
          };

          scope.navigateBackTo = function (crumb, $select) {
            $select.search = '';
            var index = _.findIndex(scope.breadcrumbs, {id: crumb.id});

            scope.breadcrumbs.splice(index + 1, scope.breadcrumbs.length);
            scope.groups = selectdataobj[_.last(scope.breadcrumbs).id];
            $select.open = false;
            scope.$broadcast('uiSelectFocus');
          };
        },
        templateUrl: '/ui-tree-select.html'
      };
    }
  ])

.directive('uiSelectFocuser', function ($timeout) {
	  return {
	    restrict: 'A',
	    require: '^uiSelect',
	    link: function (scope, elem, attrs, uiSelect) {
	      scope.$on('uiSelectFocus', function () {
	        $timeout(uiSelect.activate);
	      });
	    }
	  };
	})

.run(['$templateCache', function ($templateCache) {
	  // Overrides selectize template for group select tree.
	  $templateCache.put('selectize/choices.tpl.html', [
	    '<div ng-show="$select.open"',
	    '  class="ui-select-choices group-tree selectize-dropdown single">',
	    '  <div ng-show="breadcrumbs.length > 1" class="ui-select-breadcrumbs">',
	    '    <span class="ui-breadcrumb" ng-repeat="crumb in breadcrumbs"',
	    '       ng-click="navigateBackTo(crumb, $select)">',
	    '       {{crumb.title}}',
	    '    </span>',
	    '  </div>',
	    '  <div class="ui-select-choices-content selectize-dropdown-content">',
	    '    <div class="ui-select-choices-group optgroup">',
	    '      <div ng-show="$select.isGrouped"',
	    '        class="ui-select-choices-group-label optgroup-header">',
	    '        {{$group}}',
	    '      </div>',
	    '      <div class="ui-select-choices-row">',
	    '        <div class="option ui-select-choices-row-inner"',
	    '           data-selectable="">',
	    '        </div>',
	    '      </div>',
	    '    </div>',
	    '  </div>',
	    '</div>'
	  ].join(''));
	}])
.filter('myfilter',function($sce,$log){
	return function(content,a){
		var a=a.toLowerCase();
		var content=content || "";
		if(a=="html"||a=="css"||a=="js"||a=="url"||a=="resourceurl"){
			if(a=="resourceurl"){
				a='resourceUrl'
				return $sce.trustAs(a,content);
			}
			else{
				return $sce.trustAs(a,content);
			}		
		}
		else{
			$log.error("输入的类型有误，请确认输入的类型为html,css,js,url或resourceurl");
		}
	}
})

